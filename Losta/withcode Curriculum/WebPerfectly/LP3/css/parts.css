@charset "utf-8";

/*========= ローディング画面のためのCSS ===============*/
#splash {
	position: fixed;
	width: 100%;
	height: 100%;
	background: #fff;
	z-index: 9999999;
	text-align: center;
	color: #fff;
}

#splash>div{
	font-size: 50px;
}

#splash-logo {
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
}

/*========= 画面遷移のためのCSS ===============*/

/*画面遷移アニメーション*/

.splashbg {
	display: none;
}

body.appear .splashbg {
	display: block;
	position: fixed;
	z-index: 999;
	width: 100%;
	height: 100vh;
	top: 0;
	left: 0;
	transform: scaleX(0);
	background-color: #119DA4;
	/*伸びる背景色の設定*/
	animation-name: PageAnime;
	animation-duration: 1.5s;
	animation-timing-function: ease-in-out;
	animation-fill-mode: forwards;

}

@keyframes PageAnime {
	0% {
		transform-origin: left;
		transform: scaleX(0);
	}

	50% {
		transform-origin: left;
		transform: scaleX(1);
	}

	50.001% {
		transform-origin: right;
		transform: scaleX(1);

	}

	100% {
		transform-origin: right;
		transform: scaleX(0);
	}
}

/*画面遷移の後現れるコンテンツ設定*/

#wrapper {
	opacity: 0;
	/*はじめは透過0に*/
}

/*bodyにappearクラスがついたら出現*/
body.appear #wrapper {
	animation-name: PageAnimeAppear;
	animation-duration: 1s;
	animation-delay: 0.8s;
	animation-fill-mode: forwards;
	opacity: 0;
}

@keyframes PageAnimeAppear {
	0% {
		opacity: 0;
	}

	100% {
		opacity: 1;
	}
}



#header {
	position: fixed;
	/*header固定*/
	height: 100px;
	/*Headerの高さ設定*/
	width: 100%;
	z-index: 9;
	display: flex;
	justify-content: center;
	align-items: center;
	background: #fff;
}

@media screen and (max-width:990px) {
	#header {
		height: 75px;
	}
}

#pc-nav ul {
	list-style: none;
	display: flex;
	justify-content: center;
	text-transform: uppercase;
	margin: 0 0 0 5%;
}

#pc-nav li a {
	display: block;
	text-decoration: none;
	color: #333;
	padding: 0 15px;
	transition: all 0.3s;
}

#pc-nav li.current a,
#pc-nav li a:hover {
	color: #a6b7b2;
}

/*===========================================================*/
/* 7-1-35	下線が伸びて背景に変わる*/
/*===========================================================*/


.btnlinestretches {
	/*線の基点とするためrelativeを指定*/
	position: relative;
	/*ボタンの形状*/
	color: #333;
	padding: 5px 30px;
	display: inline-block;
	text-decoration: none;
	outline: none;
}

/*テキストの設定*/
.btnlinestretches span {
	/*テキストを前面に出すためz-indexの値を高く設定*/
	position: relative;
	z-index: 2;
}

.btnlinestretches:hover span {
	color: #fff;
}

/*線の設定*/
.btnlinestretches::after {
	content: '';
	position: absolute;
	z-index: 1;
	bottom: 0;
	left: 0;
	/*線の形状*/
	background: #444;
	width: 100%;
	height: 3px;
	/*アニメーションの指定*/
	transition: all 0.3s ease-in-out;
}

/*線が伸びて背景に*/
.btnlinestretches:hover::after {
	height: 100%;
}

/*===========================================================*/
/* 9-2-2 任意の場所をクリックすると隠れていた内容が開き、先に開いていた内容が閉じる*/
/*===========================================================*/

/*アコーディオン全体*/
.accordion-area {
	list-style: none;
	width: 96%;
	max-width: 900px;
	margin: 0 auto;
}

.accordion-area li {
	margin: 10px 0;
}

.accordion-area section {
	border: 1px solid #ccc;
}

/*アコーディオンタイトル*/
.title {
	position: relative;
	/*+マークの位置基準とするためrelative指定*/
	cursor: pointer;
	font-size: 1rem;
	font-weight: normal;
	padding: 3% 3% 3% 50px;
	transition: all .5s ease;
}

@media screen and (max-width:768px) {
	.title {
		font-size: 0.9rem;
	}
}

/*アイコンの＋と×*/
.title::before,
.title::after {
	position: absolute;
	content: '';
	width: 15px;
	height: 2px;
	background-color: #444;

}

.title::before {
	top: 48%;
	left: 15px;
	transform: rotate(0deg);

}

.title::after {
	top: 48%;
	left: 15px;
	transform: rotate(90deg);

}

/*　closeというクラスがついたら形状変化　*/

.title.close::before {
	transform: rotate(45deg);
}

.title.close::after {
	transform: rotate(-45deg);
}

/*アコーディオンで現れるエリア*/
.box {
	display: none;
	/*はじめは非表示*/
	background: #f3f3f3;
	margin: 0 3% 3% 3%;
	padding: 3%;
}


/*===========================================================*/
/* 9-4-1 ニュースティッカー*/
/*===========================================================*/

/*ニュース1行の周りの余白*/
.slider a {
	display: block;
	background: #fff;
	padding: 10px 0;
}

/*日付*/
.slider time {
	display: inline-block;
	font-size: 0.8rem;
	margin-right: 10px;
	color: #777;
}

/*768px以下の見た目*/
@media screen and (max-width:768px) {
	.slider {
		padding: 20px;
		background: #fff;
	}

	.slider li {
		border-bottom: 1px dashed #ccc;
	}

	.slider li:last-child {
		border-bottom: none;
	}

	.slider time {
		display: block;
		padding-bottom: 10px;
	}
}


/*===========================================================*/
/* スクロールに連動した動き*/
/*===========================================================*/

/* fadeUp */

.fadeUp {
	animation-name: fadeUpAnime;
	animation-duration: 0.5s;
	animation-fill-mode: forwards;
	opacity: 0;
}

@keyframes fadeUpAnime {
	from {
		opacity: 0;
		transform: translateY(100px);
	}

	to {
		opacity: 1;
		transform: translateY(0);
	}
}


/* flipLeft */
.flipLeft {
	animation-name: flipLeftAnime;
	animation-duration: 0.5s;
	animation-delay: 0.5s;
	animation-fill-mode: forwards;
	perspective-origin: left center;
	opacity: 0;
}

@keyframes flipLeftAnime {
	from {
		transform: perspective(600px) translate3d(0, 0, 0) rotateY(30deg);
		opacity: 0;
	}

	to {
		transform: perspective(600px) translate3d(0, 0, 0) rotateY(0deg);
		opacity: 1;
	}
}

/* スマホ表示用。flipLeftTriggerを指定している親要素に指定しないとうまく動かない*/
#vision,
.service-area {
	transform: translate3d(0, 0, 0);
}

/* スクロールをしたら出現する要素にはじめに透過0を指定　*/
.fadeUpTrigger,
.flipLeftTrigger {
	opacity: 0;
}


/*===========================================================*/
/* スクロールをすると下のエリアが上にかぶさる(CSS)*/
/*===========================================================*/

#top-main {
	width: 100%;
	height: 100vh;
	position: relative;
}

#top-main:before {
	content: '';
	position: fixed;
	top: 10vh;
	left: 5%;
	z-index: -1;
	width: 90%;
	height: 80vh;
	background: url("../img/main.jpg") center no-repeat;
}

@media screen and (max-width:768px) {
	#top-main:before {
		background-position: top center;
		background-size: auto 90%;
	}
}



#container {
	position: relative;
	z-index: 1;
	background: #fff;
}